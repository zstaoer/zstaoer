(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{466:function(s,t,a){s.exports=a.p+"assets/img/image-20220520084122601.ca398174.png"},467:function(s,t,a){s.exports=a.p+"assets/img/image-20220520084321250.dad146b5.png"},468:function(s,t,a){s.exports=a.p+"assets/img/image-20220520084634232.13bee98c.png"},469:function(s,t,a){s.exports=a.p+"assets/img/image-20220520085239202.4139fec1.png"},470:function(s,t,a){s.exports=a.p+"assets/img/image-20220520085423798.6b7638f3.png"},471:function(s,t,a){s.exports=a.p+"assets/img/image-20220520091013851.53a0a4bf.png"},472:function(s,t,a){s.exports=a.p+"assets/img/image-20220519113947384-16529320449641.88ddf6ba.png"},473:function(s,t,a){s.exports=a.p+"assets/img/image-20220520105342636.ecafa4e0.png"},474:function(s,t,a){s.exports=a.p+"assets/img/image-20210713224724673.a3414a08.png"},475:function(s,t,a){s.exports=a.p+"assets/img/208d714e589cd0b59166f2973bd9becf.0a7bac62.png"},476:function(s,t,a){s.exports=a.p+"assets/img/image-20220520113844464.72ef8e7d.png"},477:function(s,t,a){s.exports=a.p+"assets/img/image-20220520114641642.974d2823.png"},530:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("SpringBoot&SpringCloud面经分享")])]),s._v(" "),t("h2",{attrs:{id:"_01-讲一讲springboot自动装配的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_01-讲一讲springboot自动装配的原理"}},[s._v("#")]),s._v(" 01- 讲一讲SpringBoot自动装配的原理")]),s._v(" "),t("p",[s._v("1.在SpringBoot项目的启动引导类上都有一个注解"),t("code",[s._v("@SpringBootApplication")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(466),alt:"image-20220520084122601"}})]),s._v(" "),t("p",[s._v("这个注解是一个复合注解, 其中有三个注解构成 , 分别是")]),s._v(" "),t("p",[t("img",{attrs:{src:a(467),alt:"image-20220520084321250"}})]),s._v(" "),t("ul",[t("li",[s._v("@SpringBootConfiguration : 是@Configuration的派生注解 , 标注当前类是一个SpringBoot的配置类")]),s._v(" "),t("li",[s._v("@ComponentScan : 开启组件扫描, 默认扫描的是当前启动引导了所在包以及子包")]),s._v(" "),t("li",[t("strong",[s._v("@EnableAutoConfiguration : 开启自动配置(自动配置核心注解)")])])]),s._v(" "),t("p",[s._v("2.在@EnableAutoConfiguration注解的内容使用@Import注解导入了一个"),t("code",[s._v("AutoConfigurationImportSelector.class")]),s._v("的类")]),s._v(" "),t("p",[t("img",{attrs:{src:a(468),alt:"image-20220520084634232"}})]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("AutoConfigurationImportSelector.class")]),s._v("中的"),t("code",[s._v("selectImports")]),s._v("方法内通过一系列的方法调用, 最终需要加载类加载路径下"),t("code",[s._v("META-INF")]),s._v("下面的"),t("code",[s._v("spring.factories")]),s._v("配置文件")]),s._v(" "),t("p",[s._v("3.在"),t("code",[s._v("META-INF/spring.factories")]),s._v("配置文件中, 定义了很多的自动配置类的完全限定路径")]),s._v(" "),t("p",[t("img",{attrs:{src:a(469),alt:"image-20220520085239202"}})]),s._v(" "),t("p",[s._v("这些配置类都会被加载")]),s._v(" "),t("p",[s._v("4.加载配置类之后, 会配置类或者配置方法上的@ConditionalOnXxxx条件化注解是否满足条件")]),s._v(" "),t("p",[t("img",{attrs:{src:a(470),alt:"image-20220520085423798"}})]),s._v(" "),t("p",[s._v("如果满足条件就会从属性配置类中读取相关配置 , 执行配置类中的配置方法 , 完成自动配置")]),s._v(" "),t("h2",{attrs:{id:"_02-讲一讲springboot启动流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_02-讲一讲springboot启动流程"}},[s._v("#")]),s._v(" 02- 讲一讲SpringBoot启动流程")]),s._v(" "),t("p",[s._v("springboot项目在启动的时候, 首先会执行启动引导类里面的"),t("code",[s._v("SpringApplication.run(AdminApplication.class, args)")]),s._v("方法")]),s._v(" "),t("p",[t("img",{attrs:{src:a(471),alt:"image-20220520091013851"}})]),s._v(" "),t("p",[s._v("这个run方法主要做的事情可以分为三个部分 :")]),s._v(" "),t("p",[s._v("第一部分进行SpringApplication的初始化模块，配置一些基本的环境变量、资源、构造器、监听器")]),s._v(" "),t("p",[s._v("第二部分实现了应用具体的启动方案，包括启动流程的监听模块、加载配置环境模块、及核心的创建上下文环境模块")]),s._v(" "),t("p",[s._v("第三部分是自动化配置模块，该模块作为springboot自动配置核心，在后面的分析中会详细讨论")]),s._v(" "),t("h2",{attrs:{id:"_03-你们常用的springboot起步依赖有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_03-你们常用的springboot起步依赖有哪些"}},[s._v("#")]),s._v(" 03- 你们常用的SpringBoot起步依赖有哪些")]),s._v(" "),t("p",[t("img",{attrs:{src:a(472),alt:"image-20220519113947384"}})]),s._v(" "),t("h2",{attrs:{id:"_04-springboot支持的配置文件有哪些-加载顺序是什么样的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_04-springboot支持的配置文件有哪些-加载顺序是什么样的"}},[s._v("#")]),s._v(" 04- springBoot支持的配置文件有哪些 ? 加载顺序是什么样的")]),s._v(" "),t("p",[s._v("1 properties文件\n2 YAML文件\n3 系统环境变量\n4 命令行参数")]),s._v(" "),t("p",[s._v("如果有相同的配置参数, 后加载的会覆盖先加载的")]),s._v(" "),t("h2",{attrs:{id:"_05-运行一个springboot项目有哪些方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_05-运行一个springboot项目有哪些方式"}},[s._v("#")]),s._v(" 05- 运行一个SpringBoot项目有哪些方式")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("直接使用jar -jar 运行")])]),s._v(" "),t("li",[t("p",[s._v("开发过程中运行main方法")])]),s._v(" "),t("li",[t("p",[s._v("可以配置插件 , 将springboot项目打war包, 部署到Tomcat中运行")])]),s._v(" "),t("li",[t("p",[s._v("直接用maven插件运行 maven spring-boot：run")])])]),s._v(" "),t("h2",{attrs:{id:"_07-spring-boot的核心注解是哪个-他由哪几个注解组成的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_07-spring-boot的核心注解是哪个-他由哪几个注解组成的"}},[s._v("#")]),s._v(" 07-Spring Boot的核心注解是哪个？他由哪几个注解组成的？")]),s._v(" "),t("p",[s._v("Spring Boot的核心注解是@SpringBootApplication , 他由几个注解组成 :")]),s._v(" "),t("ul",[t("li",[s._v("@SpringBootConfiguration： 组合了- @Configuration注解，实现配置文件的功能；")]),s._v(" "),t("li",[s._v("@EnableAutoConfiguration：打开自动配置的功能，也可以关闭某个自动配置的选项")]),s._v(" "),t("li",[s._v("@ComponentScan：Spring组件扫描")])]),s._v(" "),t("h2",{attrs:{id:"_08-spring-boot-中如何解决跨域问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_08-spring-boot-中如何解决跨域问题"}},[s._v("#")]),s._v(" 08-Spring Boot 中如何解决跨域问题 ?")]),s._v(" "),t("p",[s._v("SpringMVC项目中使用@CrossOrigin注解来解决跨域问题 , 本质是CORS")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@RequestMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@CrossOrigin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("origins "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//@CrossOrigin(value = "http://localhost:8081") //指定具体ip允许跨域')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("SpringBoot项目采用自动配置的方式来配置CORS , 可以通过实现 WebMvcConfigurer接口然后重写addCorsMappings方法解决跨域问题。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Configuration")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CorsConfig")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("WebMvcConfigurer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addCorsMappings")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CorsRegistry")]),s._v(" registry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        registry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/**"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//是否发送Cookie")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("allowCredentials")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//放行哪些原始域")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("allowedOrigins")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("allowedMethods")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GET"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"POST"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PUT"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DELETE"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("allowedHeaders")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exposedHeaders")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("在SpringCloud项目中一般都会有网关 , 在网关中可以配置CORS跨域, 这样所有通过网关的请求都解决了跨域问题")]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cloud")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("gateway")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("globalcors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cors-configurations")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("'[/**]'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配所有请求")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("allowedOrigins")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#跨域处理 允许所有的域")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("allowedMethods")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 支持的方法")]),s._v("\n              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" GET\n              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" POST\n              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" PUT\n              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" DELETE\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h2",{attrs:{id:"_09-你们项目中使用的springboot是哪个版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_09-你们项目中使用的springboot是哪个版本"}},[s._v("#")]),s._v(" 09- 你们项目中使用的SpringBoot是哪个版本 ?")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("SpringBoot : 2.3.4.RELEASE")])]),s._v(" "),t("li",[t("p",[s._v("SpringCloud : Hoxton.SR10")])]),s._v(" "),t("li",[t("p",[s._v("SpringCloudAlibaba : 2.2.5.RELEASE")])])]),s._v(" "),t("h2",{attrs:{id:"_10-spring-cloud-5大组件有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-spring-cloud-5大组件有哪些"}},[s._v("#")]),s._v(" 10- Spring Cloud 5大组件有哪些？")]),s._v(" "),t("p",[s._v("早期我们一般认为的Spring Cloud五大组件是")]),s._v(" "),t("ul",[t("li",[s._v("Eureka   : 注册中心")]),s._v(" "),t("li",[s._v("Ribbon  : 负载均衡")]),s._v(" "),t("li",[s._v("Feign     : 远程调用")]),s._v(" "),t("li",[s._v("Hystrix :  服务熔断")]),s._v(" "),t("li",[s._v("Zuul/Gateway  : 网关")])]),s._v(" "),t("p",[s._v("随着SpringCloudAlibba在国内兴起 , 我们项目中使用了一些阿里巴巴的组件")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("注册中心/配置中心 Nacos")])]),s._v(" "),t("li",[t("p",[s._v("负载均衡 Ribbon")])]),s._v(" "),t("li",[t("p",[s._v("服务调用 Feign")])]),s._v(" "),t("li",[t("p",[s._v("服务保护 sentinel")])]),s._v(" "),t("li",[t("p",[s._v("服务网关 Gateway")])])]),s._v(" "),t("h2",{attrs:{id:"_11-什么是微服务-微服务的优缺点是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-什么是微服务-微服务的优缺点是什么"}},[s._v("#")]),s._v(" 11- 什么是微服务?微服务的优缺点是什么?")]),s._v(" "),t("p",[s._v("微服务就是一个独立的职责单一的服务应用程序，一个模块")]),s._v(" "),t("p",[s._v("1．优点：松耦合，聚焦单一业务功能，无关开发语言，团队规模降低 , 扩展性好, 天然支持分库\n2．缺点：随着服务数量增加，管理复杂，部署复杂，服务器需要增多，服务通信和调用压力增大")]),s._v(" "),t("h2",{attrs:{id:"_12-你们项目中微服务之间是如何通讯的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-你们项目中微服务之间是如何通讯的"}},[s._v("#")]),s._v(" 12- 你们项目中微服务之间是如何通讯的?")]),s._v(" "),t("p",[s._v("1．同步通信：通过Feign发送http请求调用")]),s._v(" "),t("p",[s._v("2．异步：消息队列，如RabbitMq、KafKa等")]),s._v(" "),t("h2",{attrs:{id:"_13-服务注册和发现是什么意思-spring-cloud-如何实现服务注册发现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-服务注册和发现是什么意思-spring-cloud-如何实现服务注册发现"}},[s._v("#")]),s._v(" 13- 服务注册和发现是什么意思？Spring Cloud 如何实现服务注册发现？")]),s._v(" "),t("p",[s._v("各种注册中心组件的原理和流程其实大体上类似")]),s._v(" "),t("p",[t("img",{attrs:{src:a(473),alt:"image-20220520105342636"}})]),s._v(" "),t("p",[s._v("核心的功能就一下几个 :")]),s._v(" "),t("ol",[t("li",[s._v("服务注册 : 服务启动的时候会将服务的信息注册到注册中心, 比如: 服务名称 , 服务的IP , 端口号等")]),s._v(" "),t("li",[s._v("服务发现 : 服务调用方调用服务的时候, 根据服务名称从注册中心拉取服务列表 , 然后根据负载均衡策略 , 选择一个服务, 获取服务的IP和端口号, 发起远程调用")]),s._v(" "),t("li",[s._v("服务状态监控 : 服务提供者会定时向注册中心发送心跳 , 注册中心也会主动向服务提供者发送心跳探测, 如果长时间没有接收到心跳, 就将服务实例从注册中心下线或者移除")])]),s._v(" "),t("p",[s._v("使用的话, 首先需要部署注册中心服务 , 然后在我们自己的微服务中引入注册中心依赖, 然后再配置文件中配置注册中心地址 就可以了")]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("application")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" leadnews"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("admin\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cloud")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nacos")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注册中心地址")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("discovery")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("server-addr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 124.221.75.8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8848")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置中心地址")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("config")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("server-addr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 124.221.75.8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8848")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("file-extension")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" yml\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h2",{attrs:{id:"_14-你们项目中使用的注册中心是什么-有没有了解过原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-你们项目中使用的注册中心是什么-有没有了解过原理"}},[s._v("#")]),s._v(" 14- 你们项目中使用的注册中心是什么 ? 有没有了解过原理 ?")]),s._v(" "),t("p",[s._v("我们项目中注册中心用的是Nacos  , 基本上所有的注册中心的核心功能都包括服务注册 , 服务发现, 服务状态监控  , 他的核心原理如下 :")]),s._v(" "),t("ol",[t("li",[s._v("客户端启动时会将当前服务的信息包含ip、端口号、服务名、分组名、集群名等信息封装为一个Instance对象，准备向Nacos服务器注册服务，在注册服务之前，会根据Instance中的信息创建一个BeatInfo对象，然后创建一个定时任务，每隔一段时间向Nacos服务器发送PUT请求并携带相关信息，作为定时心跳连接，服务器端在接收到心跳请求后，会去检查当前服务列表中有没有该实例，如果没有的话将当前服务实例重新注册，注册完成后立即开启一个异步任务，更新客户端实例的最后心跳时间，如果当前实例是非健康状态则将其改为健康状态")]),s._v(" "),t("li",[s._v("心跳定时任务创建完成后，通过POST请求将当前服务实例信息注册进Nacos服务器，服务器端在接收到注册实例请求后，会将请求携带的数据封装为一个Instance对象，然后为这个服务实例创建一个服务Service，一个Service下可能有多个服务实例，服务在Nacos保存到一个ConcurrentHashMap中，格式为命名空间为key，value为map，分组名和服务名为内层map的key，value为服务数据，Map(namespace,Map(group::serviceName, Service))")]),s._v(" "),t("li",[s._v("服务创建完成之后，开启一个定时任务（5s执行一次），检查当前服务中的各个实例是否在线，如果实例上次心跳时间大于15s就将其状态设置为不健康，如果超出30s，则直接将该实例删除；")]),s._v(" "),t("li",[s._v("然后将当前实例添加到对应服务列表中，这里会通过synchronized锁住当前服务，然后分两种情况向集群中添加实例，如果是持久化数据，则使用CP模型，通过leader节点将实例数据更新到内存和磁盘文件中，然后同步写入到其他节点 , 必须集群半数以上节点写入成功才会给客户端返回成功；")]),s._v(" "),t("li",[s._v("如果是非持久话实例数据，使用的是AP模型，首先向任务阻塞队列添加一个本地服务实例改变任务，去更新本地服务列表，然后在遍历集群中所有节点，分别创建数据同步任务放进阻塞队列异步进行集群数据同步，不保证集群节点数据同步完成即可返回；")]),s._v(" "),t("li",[s._v("在将服务实例更新到服务注册表中时，为了防止并发读写冲突，采用的是写时复制的思想，将原注册表数据拷贝一份，添加完成之后再替换回真正的注册表，更新完成之后，通过发布服务变化事件，将服务变动通知给客户端，采用的是UDP通信，客户端接收到UDP消息后会返回一个ACK信号，如果一定时间内服务端没有收到ACK信号，还会尝试重发，当超出重发时间后就不在重发，虽然通过UDP通信不能保证消息的可靠抵达，但是由于Nacos客户端会开启定时任务，每隔一段时间更新客户端缓存的服务列表，通过定时轮询更新服务列表做兜底，所以不用担心数据不会更新的情况，这样既保证了实时性，又保证了数据更新的可靠性；")]),s._v(" "),t("li",[s._v("服务发现：客户端通过定时任务定时从服务端拉取服务数据保存在本地缓存，服务端在发生心跳检测、服务列表变更或者健康状态改变时会触发推送事件，在推送事件中会基于UDP通信将服务列表推送到客户端，同时开启定时任务，每隔10s定时推送数据到客户端")])]),s._v(" "),t("h2",{attrs:{id:"_15-你们项目负载均衡如何实现的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-你们项目负载均衡如何实现的"}},[s._v("#")]),s._v(" 15- 你们项目负载均衡如何实现的 ?")]),s._v(" "),t("p",[s._v("服务调用过程中的负载均衡一般使用SpringCloud的Ribbon 组件实现  , Feign的底层已经自动集成了Ribbon  , 使用起来非常简单")]),s._v(" "),t("p",[s._v("客户端调用的话一般会通过网关, 通过网关实现请求的路由和负载均衡")]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cloud")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("gateway")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("routes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 平台管理")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" wemedia\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("uri")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" lb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//leadnews"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("wemedia\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("predicates")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" Path=/wemedia/"),t("span",{pre:!0,attrs:{class:"token important"}},[s._v("**")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("filters")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" StripPrefix= 1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("strong",[s._v("RIbbon负载均衡原理 :")])]),s._v(" "),t("p",[s._v("SpringCloudRibbon的底层采用了一个拦截器，拦截了RestTemplate发出的请求，对地址做了修改。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(474),alt:"image-20210713224724673"}})]),s._v(" "),t("p",[s._v("基本流程如下：")]),s._v(" "),t("ul",[t("li",[s._v("拦截我们的RestTemplate请求")]),s._v(" "),t("li",[s._v("RibbonLoadBalancerClient会从请求url中获取服务名称")]),s._v(" "),t("li",[s._v("DynamicServerListLoadBalancer根据服务名称到注册中心拉取服务列表")]),s._v(" "),t("li",[s._v("注册中心返回列表")]),s._v(" "),t("li",[s._v("IRule利用内置负载均衡规则，从列表中选择一个服务实例")]),s._v(" "),t("li",[s._v("RibbonLoadBalancerClient用服务实例的IP和端口替换请求路径中的服务名称")]),s._v(" "),t("li",[s._v("向服务实例发起http请求")])]),s._v(" "),t("h2",{attrs:{id:"_16-ribbon负载均衡策略有哪些-如果想自定义负载均衡策略如何实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-ribbon负载均衡策略有哪些-如果想自定义负载均衡策略如何实现"}},[s._v("#")]),s._v(" 16- Ribbon负载均衡策略有哪些 ? 如果想自定义负载均衡策略如何实现 ?")]),s._v(" "),t("p",[s._v("Ribbon默认的负载均衡策略有七种 :")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("**内置负载均衡规则类 **")]),s._v(" "),t("th",[t("strong",[s._v("规则描述")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("RoundRobinRule")]),s._v(" "),t("td",[s._v("简单轮询服务列表来选择服务器。它是Ribbon默认的负载均衡规则。")])]),s._v(" "),t("tr",[t("td",[s._v("AvailabilityFilteringRule")]),s._v(" "),t("td",[s._v("对以下两种服务器进行忽略：   （1）在默认情况下，这台服务器如果3次连接失败，这台服务器就会被设置为“短路”状态。短路状态将持续30秒，如果再次连接失败，短路的持续时间就会几何级地增加。  （2）并发数过高的服务器。如果一个服务器的并发连接数过高，配置了AvailabilityFilteringRule规则的客户端也会将其忽略。并发连接数的上限，可以由客户端的ActiveConnectionsLimit属性进行配置。")])]),s._v(" "),t("tr",[t("td",[s._v("WeightedResponseTimeRule")]),s._v(" "),t("td",[s._v("为每一个服务器赋予一个权重值。服务器响应时间越长，这个服务器的权重就越小。这个规则会随机选择服务器，这个权重值会影响服务器的选择。")])]),s._v(" "),t("tr",[t("td",[t("strong",[s._v("ZoneAvoidanceRule")])]),s._v(" "),t("td",[s._v("以区域可用的服务器为基础进行服务器的选择。使用Zone对服务器进行分类，这个Zone可以理解为一个机房、一个机架等。而后再对Zone内的多个服务做轮询。")])]),s._v(" "),t("tr",[t("td",[s._v("BestAvailableRule")]),s._v(" "),t("td",[s._v("忽略那些短路的服务器，并选择并发数较低的服务器。")])]),s._v(" "),t("tr",[t("td",[s._v("RandomRule")]),s._v(" "),t("td",[s._v("随机选择一个可用的服务器。")])]),s._v(" "),t("tr",[t("td",[s._v("RetryRule")]),s._v(" "),t("td",[s._v("重试机制的选择逻辑")])])])]),s._v(" "),t("p",[t("strong",[s._v("默认的实现就是ZoneAvoidanceRule，是一种轮询方案")])]),s._v(" "),t("p",[s._v("如果想要自定义负载均衡 , 可以自己创建类实现IRule接口 , 然后再通过配置类或者配置文件配置即可 :")]),s._v(" "),t("p",[s._v("通过定义IRule实现可以修改负载均衡规则，有两种方式：")]),s._v(" "),t("ol",[t("li",[s._v("代码方式：在order-service中的OrderApplication类中，定义一个新的IRule：")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IRule")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("randomRule")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RandomRule")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("配置文件方式：在order-service的application.yml文件中，添加新的配置也可以修改规则：")])]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("userservice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给某个微服务配置负载均衡规则，这里是userservice服务")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ribbon")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("NFLoadBalancerRuleClassName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" com.netflix.loadbalancer.RandomRule "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 负载均衡规则 ")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"_17-你们项目的配置文件是怎么管理的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-你们项目的配置文件是怎么管理的"}},[s._v("#")]),s._v(" 17- 你们项目的配置文件是怎么管理的 ?")]),s._v(" "),t("p",[s._v("大部分的固定的配置文件都放在服务本地 , 一些根据环境不同可能会变化的部分, 放到Nacos中")]),s._v(" "),t("h2",{attrs:{id:"_18-你们项目中有没有做过限流-怎么做的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-你们项目中有没有做过限流-怎么做的"}},[s._v("#")]),s._v(" 18- 你们项目中有没有做过限流 ? 怎么做的 ?")]),s._v(" "),t("p",[s._v("限流一般有二种方式设置 :")]),s._v(" "),t("p",[t("strong",[s._v("第一种  : 网关配置限流")])]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("application")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" api"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("gateway\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("host")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" localhost\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cloud")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("gateway")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("routes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" cloud"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("gateway\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("uri")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//192.168.1.211"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8088/\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("predicates")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" Path=/ytb/"),t("span",{pre:!0,attrs:{class:"token important"}},[s._v("**")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("filters")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" StripPrefix=1\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" RequestRateLimiter\n              "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("args")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis-rate-limiter.replenishRate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 令牌桶每秒填充速率")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis-rate-limiter.burstCapacity")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 令牌桶总容量")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key-resolver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#{@pathKeyResolver}"')]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 SpEL 表达式按名称引用 bean")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("blockquote",[t("p",[s._v("在上面的配置文件，配置了 redis 的信息，并配置了 RequestRateLimiter 的限流过滤器，该过滤器需要配置三个参数：")]),s._v(" "),t("p",[s._v("burstCapacity，令牌桶总容量。\nreplenishRate，令牌桶每秒填充平均速率。\nkey-resolver，用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据 #{@beanName} 从 Spring 容器中获取 Bean 对象")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Configuration")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("KeyResolverConfiguration")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("KeyResolver")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pathKeyResolver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" exchange "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Mono")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("just")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("exchange"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRequest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getURI")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPath")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])]),s._v(" "),t("p",[s._v("常见的限流算法有：计数器算法，漏桶（Leaky Bucket）算法，令牌桶（Token Bucket）算法。")]),s._v(" "),t("p",[t("strong",[s._v("Spring Cloud Gateway官方提供了RequestRateLimiterGatewayFilterFactory过滤器工厂，使用Redis 和Lua脚本实现了 令牌桶 的方式。")])]),s._v(" "),t("p",[s._v("令牌桶算法 是对漏桶算法的一种改进，漏桶算法能够限制请求调用的速率，而令牌桶算法能够在限制调用的平均速率的同时还允许一定程度的突发调用。在令牌桶算法中，存在一个桶，用来存放固定数量的令牌。算法中存在一种机制，以一定的速率往桶中放令牌。每次请求调用需要先获取令牌，只有拿到令牌，才有机会继续执行，否则选择选择等待可用的令牌、或者直接拒绝。")]),s._v(" "),t("p",[s._v("放令牌这个动作是持续不断的进行，如果桶中令牌数达到上限，就丢弃令牌。所以就存在这种情况，桶中一直有大量的可用令牌，这时进来的请求就可以直接拿到令牌执行，比如设置qps为100，那么限流器初始化完成一秒后，桶中就已经有100个令牌了，这时服务还没完全启动好，等启动完成对外提供服务时，该限流器可以抵挡瞬时的100个请求。所以，只有桶中没有令牌时，请求才会进行等待，最后相当于以一定的速率执行。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(475),alt:"img"}})]),s._v(" "),t("p",[t("strong",[s._v("第二种 : 使用服务保护组件Sentinel实现限流")])]),s._v(" "),t("p",[s._v("建议回去看看"),t("strong",[s._v("微服务保护")]),s._v("课程中的限流配置")]),s._v(" "),t("h2",{attrs:{id:"_19-断路器-熔断器用过嘛-断路器的状态有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19-断路器-熔断器用过嘛-断路器的状态有哪些"}},[s._v("#")]),s._v(" 19- 断路器/熔断器用过嘛 ? 断路器的状态有哪些")]),s._v(" "),t("p",[s._v("我们项目中使用Hystrix/Sentinel实现的断路器  ,  断路器状态机包括三个状态：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(476),alt:"image-20220520113844464"}})]),s._v(" "),t("ul",[t("li",[s._v("closed：关闭状态，断路器放行所有请求，并开始统计异常比例、慢请求比例。超过阈值则切换到open状态")]),s._v(" "),t("li",[s._v("open：打开状态，服务调用被"),t("strong",[s._v("熔断")]),s._v("，访问被熔断服务的请求会被拒绝，快速失败，直接走降级逻辑。Open状态5秒后会进入half-open状态")]),s._v(" "),t("li",[s._v("half-open：半开状态，放行一次请求，根据执行结果来判断接下来的操作。\n"),t("ul",[t("li",[s._v("请求成功：则切换到closed状态")]),s._v(" "),t("li",[s._v("请求失败：则切换到open状态")])])])]),s._v(" "),t("h2",{attrs:{id:"_20-你们项目中有做过服务降级嘛"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-你们项目中有做过服务降级嘛"}},[s._v("#")]),s._v(" 20- 你们项目中有做过服务降级嘛 ?")]),s._v(" "),t("p",[s._v("我们项目中涉及到服务调用得地方都会定义降级, 一般降级逻辑就是返回默认值  , 降级的实现也非常简单 , 就是创建一个类实现"),t("code",[s._v("FallbackFactory")]),s._v("接口 , 然后再对应的Feign客户端接口上面 , 通过@FeignClient指定降级类")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Component")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Slf4j")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OrderServiceFallbackFactory")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FallbackFactory")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OrderService")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OrderService")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" throwable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"调用订单服务失败"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("throwable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OrderService")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("weixinPay")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PayVO")]),s._v(" payVO"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n            "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Pager")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OrderVO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" pageIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" pageSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" orderNo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" openId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" startDate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" endDate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Pager")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n            "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBusinessTop10Skus")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" businessId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Lists")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newArrayList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("h2",{attrs:{id:"_21-你们项目中异常是怎么控制的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21-你们项目中异常是怎么控制的"}},[s._v("#")]),s._v(" 21- 你们项目中异常是怎么控制的 ?")]),s._v(" "),t("p",[s._v("我们会根据不同的异常情况定义异常类 , 实现RuntimeException接口 , 然后在需要进行异常处理的位置对外抛出对应异常")]),s._v(" "),t("p",[s._v("在项目中使用@ControllerAdvice  +  @ExceptionHandler 捕获指定异常 , 处理异常")]),s._v(" "),t("p",[t("img",{attrs:{src:a(477),alt:"image-20220520114641642"}})]),s._v(" "),t("h2",{attrs:{id:"_22-springboot项目读取配置文件的方式有哪些-如何实现配置的热更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22-springboot项目读取配置文件的方式有哪些-如何实现配置的热更新"}},[s._v("#")]),s._v(" 22- SpringBoot项目读取配置文件的方式有哪些 ? 如何实现配置的热更新 ?")]),s._v(" "),t("p",[s._v("SpringBoot项目读取配置文件常用的方式有二种 :")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("通过@Value注解通过属性名称读取")])]),s._v(" "),t("li",[t("p",[s._v("通过@ConfigurationProperties属性 , 批量读取配置文件配置到属性配置类")])])]),s._v(" "),t("p",[s._v("实现热更新的方式也有二种 : 首先需要将配置文件配置到配置中心中 , 之后通过")]),s._v(" "),t("ol",[t("li",[s._v("@Value + @RefreshScope注解实现热更新")]),s._v(" "),t("li",[s._v("通过@ConfigurationProperties注解读取的属性, 自动会热更新")])])])}),[],!1,null,null,null);t.default=e.exports}}]);